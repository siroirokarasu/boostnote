type: "SNIPPET_NOTE"
folder: "0c2c9cdedc7714162967"
title: "すべてはカスタムタグの集合"
description: '''
  すべてはカスタムタグの集合
  
  例えば、指定した日の天気を表示する <weather> というカスタムタグを作って、それを使いたいとします。HTML には以下のように記述しておきます。
  表示はこうなります。
  2016/01/01の天気は晴れです。
  
  ファイル名を weather.html としていますが、weather.js でも、それ以外の好きな名前+拡張子でも構いません。Riot はカスタムタグとして読み込まれたファイルを自動的にコンパイルしてくれます。それもブラウザ側で。( もちろんプリコンパイルしておくこともできます )
  
  カスタムタグの属性を opts オブジェクトによって受け渡していて、この中身は文字列でもオブジェクトでもなんでも構いません。カスタムタグで利用したい値を自由に渡せます。
  
  カスタムタグの記述は、<weather> と </weather> のあいだに、実際に表示を行う HTML と、カスタムタグの仕様を実現するためのスクリプトとスタイルを同梱します。
  
  カスタムタグを実現するために必要なものすべてが、ひとつのファイルに存在 します。
  
  実際に表示を行うタグは標準のタグでも良いですし、また他のカスタムタグも使えます。
  
  読みやすくて標準に近い文法 にも関わらず、カスタムタグというコンポーネント同士を組み合わせることで どのようなアプリケーションも実現できる 強力なパターンです。
  
  公式ドキュメント では、より実用的でもっと踏み込んだカスタムタグが例示されています。
'''
snippets: [
  {
    name: "weather.html"
    mode: "HTML"
    content: "<weather date=\"2016/01/01\" state=\"晴れ\"></weather>"
  }
  {
    name: "weather.js"
    mode: "JavaScript"
    content: '''
      <weather>
      
          <p>{ date }の天気は{ weather }です。</p>
      
          <script>
      
              this.date = opts.date
              this.weather = opts.state
      
          </script>
      
          <style>
      
              :scope {
                  display: block
              }
      
          </style>
      
      </weather>
    '''
  }
]
tags: []
isStarred: false
createdAt: "2017-06-06T06:44:52.928Z"
updatedAt: "2017-06-06T06:46:03.073Z"
