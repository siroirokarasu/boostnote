type: "SNIPPET_NOTE"
folder: "b4c8dac7c4ee0cfe9bb4"
title: "子で親のデータ更新"
description: '''
  子で親のデータ更新
  
  あるケースにおいては、プロパティに対して “双方向バインディング” が必要になるかもしれません。実際 Vue 1.x では、これは .sync 修飾子を提供したことで正にそうでした。子コンポーネントが .sync を持つプロパティを変更すると、値の変更は親に反映されます。これは便利ですが、単一方向のデータフローを破るため、長期的においてメンテナンスの問題につながります。子プロパティを変更するコードは暗黙的に親の状態に影響を及ぼします。
  これが、2.0 がリリースされたときに .sync 修飾子を削除した理由です。しかしながら、特に再利用可能なコンポーネントをリリースする場合には、それが実際に有用な場合があることが分かりました。私たちは、親の状態に、より一貫性と明示性の影響を与える子のコードを作成する変更が必要です。
  2.3 では、プロパティに対する .sync 修飾子を再導入しましたが、今回はさらに v-on リスナーに自動的に展開される、まさしく糖衣構文です:
'''
snippets: [
  {
    name: ".js"
    mode: "JavaScript"
    content: '''
      <comp :foo.sync="bar"></comp>
      
      // 以下に展開される
      
      <comp :foo="bar" @update:foo="val => bar = val"></comp>
      
      
      // 子からのアップデート方法
      this.$emit('update:foo', newValue)
    '''
  }
]
tags: []
isStarred: false
createdAt: "2017-07-26T08:54:24.776Z"
updatedAt: "2017-07-26T08:56:42.158Z"
